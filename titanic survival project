import streamlit as st
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

# Load data
@st.cache_data
def load_data():
    data = pd.read_csv("C:\\Users\\Swarali\\Documents\\Computer Practical\\train.csv")
    data['Age'].fillna(data['Age'].median(), inplace=True)
    data['Embarked'].fillna(data['Embarked'].mode()[0], inplace=True)
    data.drop(columns=['Cabin','PassengerId','Name','Ticket'], inplace=True)
    data = pd.get_dummies(data, columns=['Sex','Embarked'], drop_first=True)
    return data

data = load_data()

# Split
X = data.drop("Survived", axis=1)
y = data["Survived"]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
model = LogisticRegression(max_iter=1000)
model.fit(X_train, y_train)

# App UI
st.title("ðŸš¢ Titanic Survival Prediction App")

st.write("Enter passenger details to predict survival:")

Pclass = st.selectbox("Passenger Class (1 = 1st, 2 = 2nd, 3 = 3rd)", [1,2,3])
Age = st.slider("Age", 1, 80, 25)
SibSp = st.slider("Number of Siblings/Spouses Aboard", 0, 5, 0)
Parch = st.slider("Number of Parents/Children Aboard", 0, 5, 0)
Fare = st.slider("Fare", 0, 500, 50)
Sex_male = st.radio("Sex", ["Female","Male"])
Embarked = st.radio("Port of Embarkation", ["C","Q","S"])

# Convert inputs
Sex_male = 1 if Sex_male == "Male" else 0
Embarked_Q = 1 if Embarked == "Q" else 0
Embarked_S = 1 if Embarked == "S" else 0

# Predict
if st.button("Predict Survival"):
    sample = pd.DataFrame([[Pclass, Age, SibSp, Parch, Fare, Sex_male, Embarked_Q, Embarked_S]],
                          columns=X.columns)
    prediction = model.predict(sample)[0]
    result = "ðŸŸ¢ Survived" if prediction == 1 else "ðŸ”´ Did Not Survive"
    st.subheader(f"Prediction: {result}")
